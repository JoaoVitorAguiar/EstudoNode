1) npm init -y (-y "sim" em todas as perguntas)
2) npm install express ou npm i express
3) npm i dotenv
4) npm i @types/express -D (-D -> desenvolvimento)
5) npm i typescript -D
6) npm i @types/node -D
7) npm i tsx

Para rodar de forma proficional esta aplicação,
    precisamos rodar o comando:
    "npx tsx src/server.ts"
    Porém isso não é legal, então vamos em package.json
    e em "scripts": { }, adicionamos o seguinte:
    "scripts": {
    "dev": "tsx watch src/server.ts"
    },
    Em que "watch" significa assitir todas as mudanças do arquivo

* Instalando o Prisma (ORM)
https://www.prisma.io/docs/getting-started/quickstart
1) Cria um arquivo tsconfig
    npx tsc --init
2) instalando o prisma:
    npm install prisma --save-dev
3) Inicializar o banco de dados com Sqlite 
    npx prisma init --datasource-provider sqlite
4) Definindo a tabela usuário
    model User {
    id    Int     @id @default(autoincrement())
    email String  @unique
    name  String?
    @@map("users")
    }
5) Criando a migração
    npx prisma migrate dev --name 

6) Prisma studio 
    npm i @prisma/client
    npx prisma studio

* Tratando erros
1) Biblioteca para caputarar os erros e mostar de forma mais amigável
    npm i express-async-errors

* Validar os dados
1) Biblioteca para validação de dados
    npm i zod

* Adicionado senha ao usuário:
1) Criando os campos "password_hash", "created_at" e "updated_at" no prisma
2) Instalando o pacote para encriptar senhas
    npm i bcrypt @types/bcrypt

* Autenticação e Autorização

